<!doctype html>
<html lang="">
 <head>
  <meta charset="UTF-8">
  <title>New WeiBo</title>
<script type="text/javascript">
<!--
String.prototype.atString = function(){
	endMarks = "@# \n";
	text = this.replace('@','').replace(' ','').replace('#','').replace('\n','').replace('@','');
	return text;
}

topicArray = [
'央视新闻',
'丁宝刚',
'阳光水岸111',
'微博雷达',
'华西都市报',
'微博辟谣',
'武汉市小动物',
'东方梦工厂',
'Hust新闻眼',
'陈潇simon',
]

//-->
</script>
<style>
body {padding:0; margin:0;}

.mainarea {width:auto; padding:20px; margin:1em auto; background: linear-gradient(to right,#FF8140,#FEDC75,#FF8140);}

.send_weibo {width:600px; margin:2em auto; border:#666 1px solid; background:#EEE; border-radius:8px; padding:5px;  box-shadow: 0 0 25px 0 rgba(0,0,0,0.3)}

.input {background:#FFF; border:#999 1px solid; padding:6px; border-radius:3px; box-shadow: 0 0 5px 0 rgba(0,0,0,0.2) inset;
 }

.input-box {display:block;width:auto; padding:0; margin:0; border:none; background-color:transparent;}

.text-style {display:block;font:18px 'Arial','Microsoft YaHei';line-height:24px;overflow-x: hidden;overflow-y: auto; white-space:pre-wrap; word-break:break-all;}

.func {height:auto;}
.public-btn {
	float:right;
	background: rgb(255, 129, 64);
	border: 1px solid rgb(247, 124, 61);
	color: rgb(255, 255, 255);
	box-shadow: 0px 1px 2px rgba(0,0,0,0.25);
	text-decoration: none;
	width: 60px;
	border-radius: 0 0 8px 8px;
	text-align: center;
	padding: 5px 20px;
	margin-right: 20px;
}

.clear {clear:both;}

.atList {
	position:absolute;
	height:auto;
	width:160px;
	background:#FFF;
	border:#ff9900 1px solid;
	border-radius:3px;
	box-shadow:1px 1px 4px #AAA; 
}

.atList.hidden {display:none;}

.atList ul {
	list-style:none;
	padding:5px 0;
	margin:0px;
}

.atList .model {display:none;}

.atList li {padding:3px 8px; color:#888;}

.atList li:hover {color:blue;}

.atList li.foc {background:rgb(242, 242, 245);color: rgb(235, 115, 80);}

.atList li:after {content:attr(data-name);}

#textClone {
	position:absolute;
	top:40px;
	left:30px;
	visibility:hidden;
	background:gray;
}

</style>
 </head>
 <body>

<div class="header">
@@@@@@@
</div>

<div class="mainarea">
	<div class="send_weibo">
		<div class="input">
			<textarea class="input-box text-style" id="text" name="weibo-box" rows='4' style="width:100%;"></textarea>
		</div>
		<div class="func_area">
			<div class="func">
				<a href="javascript:void(0);" class="public-btn">发布</a>
				<div class="clear"></div>
			</div>
		</div>
	</div>
</div>


<div class="text-clone text-style" id="textClone" style="white-space:pre-wrap; word-break:break-all;">
</div>

<div class="atList hidden" id="atList">
 <ul id="topics">
 <!--temp start-->
 <li data-name="qwe" class="model">qwe</li>
 <!--temp end-->
 </ul>
</div>


 <script>

texto = document.getElementById('text');
texto.addEventListener('focus',function(){textBox.textParser();});

texto.addEventListener('blur',function(){
	if(!atList.mouseHover){
		atList.hideList.call(atList);
	}
});

texto.addEventListener('input',function(){textBox.textParser();});
texto.addEventListener('mouseup',function(){textBox.textParser();});

texto.addEventListener('keyup'  ,function(e){keyPressEvent(e);});
texto.addEventListener('keydown',function(e){keyPressEvent(e);});

//locate `text-clone`
function resizeCloneBox(){
	tc = document.getElementById('textClone');
	ta = document.getElementById('text');
	xp = ta.offsetLeft;
	yp = ta.offsetTop;
	hp = ta.offsetHeight;
	wp = ta.offsetWidth;
	tc.style.top = (yp)+'px';
	tc.style.left= xp+'px';
	tc.style.height= hp+'px';
	tc.style.width = wp+'px';
}


function topicItemClickEvent(){
	textBox.completeAtString(this.dataset.name,textBox.getCursor().start);
}


textBox = {
	'texto':document.getElementById('text'),
	'focusPos':0,

	'textParser':function(){
		var el = this.texto;

		sel=this.getCursor();

		strPos = this.findAtString(sel.start);
		if(strPos){
			resizeCloneBox();
			kw = el.value.substring(strPos.startPos,strPos.curPos);
			curPx = this.getCursorXY();
			atList.showList.call(atList,kw,curPx.left,curPx.top);
			
			kw = el.value.substring(strPos.startPos,strPos.curPos);
			curPx = this.getCursorXY();
			atList.showList.call(atList,kw,curPx.left,curPx.top);

		}else{
			atList.hideList.call(atList);
		}
	},

	'getCursor':function(){
		return {'start':this.texto.selectionStart,'end':this.texto.selectionEnd};
	},

	'setCursor':function(pos,end){
		this.texto.focus();
		this.texto.selectionStart = pos;
		this.texto.selectionEnd = end||pos;
	},

	'getCursorXY':function(){
		var clo = document.getElementById('textClone');
		cont = this.texto.value;

		pos=this.findAtString();
		clo.innerHTML = cont.substring(0,pos.atPos) + '<span>|</span>' + cont.substring(pos.atPos);
		
		spanElem = clo.getElementsByTagName('span')[0];
		return {
			'top': clo.offsetTop+spanElem.offsetTop+spanElem.offsetHeight-this.texto.scrollTop, 'left':clo.offsetLeft+spanElem.offsetLeft
		};
	},


	'findAtString':function(focus){
		if(!focus) focus=this.getCursor().start;
		var cont=this.texto.value;
		var startPos, endPos,atPos;
		endMarks = "# \n";
		startMarks = '@';

		//Find Start-End Area
		for(var i=focus-1;i>=0;i--){
			//alert(cont[i]);
			if(endMarks.indexOf(cont[i])>=0){
				return false;
			}
			if(startMarks.indexOf(cont[i])>=0){
				startPos=i+1;
				atPos=i;
				break;
			}
		}
		if(i<0){
			return false;
		}

		endPos = cont.length-1;
		for(var i=focus;i<cont.length;i++){
			if(endMarks.search(cont[i])+1){
				endPos= i;
				break;
			}
		}
		return {'startPos':startPos,'atPos':atPos,'endPos':endPos,'curPos':focus};
	},

	'replaceAtString':function(rep,focus){
		var cont=this.texto.value;
		pos = this.findAtString(focus);
		if(!pos){
			return cont;
		}
		rep = rep.atString();
		if(rep!=''){
			return cont.substring(0,pos.atPos) + '@' + rep + ' ' +cont.substring(pos.endPos+1);
		}else{
			return cont;
		}
	},

	'completeAtString':function(rep,focus){
		var cont=this.texto.value;
		if(!focus) focus=this.getCursor().start;

		pos = this.findAtString(focus);
		if(!pos){
			return cont;
		}

		rep = rep.atString();
		if(rep!=''){
			newcont = cont.substring(0,pos.atPos) + '@' + rep + ' ' +cont.substring(pos.curPos);
			this.texto.value = newcont;
			//Change Focus
			this.setCursor(pos.atPos + rep.length + 2);
		}else{
			
		}
		atList.hideList.call(atList);
	},

	'backSpace':function(){
		focus=this.getCursor().start;
		cont = this.texto.value;
		this.texto.value = cont.substring(0,focus-1) + cont.substring(focus);
		this.setCursor(focus-1);

	},



	//console.log(strPos?(strPos.startPos+'%'+strPos.endPos):'none');
	//console.log(replaceAtString(el.value, sel.start,'Cool# @ 、你 的产生的都是到付到付看您的v你看DVN'));

}

atList = 
{
	'node':document.getElementById('atList'),
	'display' :0,
	'selectedIndex':0,
	'mouseHover':0,

	'showList':function(keyword,leftPx,topPx){
		var el = this.node;
		if(el.className.search('hidden')>=0){
			el.className = el.className.replace('hidden','');
		}
		el.style.top  =(topPx+10) +'px';
		el.style.left =leftPx+'px';
		this.loadList(keyword);
		this.setSelected(0);
		this.display=1;
	},

	'hideList':function(){
		var el = this.node;
		if(el.className.search('hidden')==-1){
			el.className += ' hidden';
		}
		this.setSelected(0);
		this.display=0;
	},

	'loadList':function(keyword){
		var el = this.node;
		ulElem = document.getElementById('topics');
		liModel = document.getElementById('topics').getElementsByClassName('model')[0];

		//Clear old items
		la = ulElem.getElementsByClassName('enabled');
		lal = la.length;
		for(var i=lal-1;i>=0;i--){
			ulElem.removeChild(la[i]);
		}
		//Add new
		for(var i=0;i<this.topicArray.length;i++){
			mo = liModel.cloneNode(true);
			tp = this.topicArray[i];
			if(keyword&&(!this.filter(keyword,tp))){
				continue;
			}
			mo.innerHTML='';
			mo.dataset.name = tp;
			mo.className = 'enabled';
			mo.addEventListener('click',topicItemClickEvent);
			mo.addEventListener('mouseover',mouseMoveEvent);
			ulElem.appendChild(mo);
		}
	},

	'filter':function(keyword,checked){
		if(checked.search(keyword)+1)
		return true;
	},

	'setSelected':function(index){
		if(index===undefined) return false;
		ulNodes = this.node.getElementsByClassName('enabled');
	
		if(ulNodes.length ==0 ) return false;
		if(ulNodes[this.selectedIndex].className.indexOf('foc')==-1){
			this.selectedIndex = this.getSelected()||0;
		}
		selNode = ulNodes[atList.selectedIndex];
		selNode.className = selNode.className.replace('foc','');

		if(index>=ulNodes.length){
			index=0;
		}else if(index<0){
			index=ulNodes.length-1;
		}
		ulNodes[index].className += ' foc';
		this.selectedIndex=index;
	},

	'clearSelected':function(){
		fns = this.node.getElementsByClassName('foc');
		if(fns.length){
			sn = fns[0];
			sn.className = sn.className.replace('foc','');
		}
	},

	'getSelected':function(){
		ns = this.node.getElementsByClassName('enabled');
		for(var i=0;i<ns.length;i++){
			if(ns[i].className.indexOf('foc')+1){
				//this.selectedIndex = i;
				return i;
			}
		}
	},


	'topicArray': [
	'央视新闻',
	'丁宝刚',
	'阳光水岸111',
	'微博雷达',
	'华西都市报',
	'微博辟谣',
	'武汉市小动物',
	'东方梦工厂',
	'Hust新闻眼',
	'陈潇simon',
	],

}

atList.node.addEventListener('mouseover',function(){atList.mouseHover=1});
atList.node.addEventListener('mouseout',function(){atList.mouseHover=0});

function mouseMoveEvent(e){
	atList.clearSelected.call(atList);
	ns = atList.node.getElementsByClassName('enabled');
	for(var i=0;i<ns.length;i++){
		if(ns[i]==e.target){
			atList.setSelected.call(atList,i);
			break;
		}
	}
	//console.log(i);
}

function keyPressEvent(e){
	//console.log(e);
	if(atList.display){
		if(e.keyCode==38){
			textBox.setCursor(textBox.focusPos);
			e.preventDefault();
			if(e.type=='keydown'){
				atList.setSelected.call(atList,atList.selectedIndex-1);
			}
		}else if(e.keyCode==40){
			textBox.setCursor(textBox.focusPos);
			e.preventDefault();
			if(e.type=='keydown'){
				atList.setSelected.call(atList,atList.selectedIndex+1);
			}
		}else if(e.keyCode==13){
			textBox.setCursor(textBox.focusPos);
			e.preventDefault();
			if(e.type=='keydown'){
				topicItemClickEvent.call(atList.node.getElementsByClassName('enabled')[atList.selectedIndex]);
				//textBox.backSpace();
			}
		}else{
			textBox.focusPos = textBox.getCursor().start;
			textBox.textParser();
		}
	}else{
		textBox.focusPos = textBox.getCursor().start;
		textBox.textParser();
	}
}
	


clo = document.getElementById('textClone');
texto=document.getElementById('text');
clo.style.left = texto.offsetLeft+'px';
clo.style.top = texto.offsetTop+'px';

  </script>
 </body>
</html>
